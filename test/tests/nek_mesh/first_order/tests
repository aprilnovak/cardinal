[Tests]
  [first_order_mesh]
    type = Exodiff
    input = nek.i
    exodiff = nek_out.e
    requirement = "NekRSMesh shall construct a first-order surface mesh from a list of boundary IDs. "
                  "The ordering for the nodes shall be based on the libMesh ordering."
    required_objects = 'NekRSProblem'
  []
  [first_order_volume_mesh]
    type = Exodiff
    input = nek_volume.i
    exodiff = nek_volume_out.e
    requirement = "NekRSMesh shall construct a first-order volume mesh. "
                  "The ordering for the nodes shall be based on the libMesh ordering."
    required_objects = 'NekRSProblem'
  []
  [boundary_exact]
    type = Exodiff
    input = exact.i
    exodiff = exact_out.e
    requirement = "The system shall be able to generate an exact first-order boundary mesh mirror."
    required_objects = 'NekRSProblem'
  []
  [volume_exact]
    type = Exodiff
    input = exact_volume.i
    exodiff = exact_volume_out.e
    requirement = "The system shall be able to generate an exact first-order volume mesh mirror."
    required_objects = 'NekRSProblem'
  []
  [second_exact]
    type = RunException
    input = exact.i
    cli_args = 'Mesh/order=SECOND'
    expect_err = "When building an exact mesh mirror, the 'order' must be FIRST!"
    requirement = "The system shall error if trying to build an exact mesh mirror that is second order."
    required_objects = 'NekRSProblem'
  []
[]
