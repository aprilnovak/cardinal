//
// nekRS User Defined File
//
#include <math.h>
#include "udf.hpp"

void uservp(nrs_t *nrs, dfloat time, occa::memory o_U, occa::memory o_S,
            occa::memory o_UProp, occa::memory o_SProp)
{
  mesh_t *mesh = nrs->meshV;

  if(platform->options.compareArgs("MESH SOLVER", "ELASTICITY")){
    // moving mesh parameters
    const dfloat vnu = 0.4;
    const dfloat ce = 1.0 / (1.0 + vnu);
    const dfloat c2 = vnu * ce / (1.0 - 2.0 * vnu);
    const dfloat c3 = 0.5 * ce;
    auto o_mesh_diff = o_UProp + 2 * nrs->fieldOffset * sizeof(dfloat);
    auto o_mesh_rho  = o_UProp + 3 * nrs->fieldOffset * sizeof(dfloat);
    platform->linAlg->fill(nrs->meshV->Nlocal, c2, o_mesh_diff);
    platform->linAlg->fill(nrs->meshV->Nlocal, c3, o_mesh_rho);
  }
}

/* UDF Functions */

void UDF_LoadKernels(occa::properties& kernelInfo)
{
}


void UDF_Setup(nrs_t *nrs)
{
  udf.properties = &uservp;
  nrs->p0th[0] = 1.0;
  nrs->p0th[1] = 1.0;
  nrs->p0th[2] = 1.0;
}

void UDF_ExecuteStep(nrs_t *nrs, dfloat time, int tstep)
{
}
