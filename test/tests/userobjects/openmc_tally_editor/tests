[Tests]
  [wrong_problem]
    type = RunException
    input = wrong_problem.i
    cli_args = 'Problem/type=FEProblem Variables/u/order=FIRST Kernels/d/type=Diffusion Kernels/d/variable=u'
    expect_err = 'This user object can only be used with wrapped OpenMC cases!'
    requirement = 'The system shall error if a userobject is not used with a compatible problem class.'
    required_objects = 'OpenMCCellAverageProblem'
  []
  [nonexistent_id]
    type = RunException
    input = tally_param_checks.i
    cli_args = 'UserObjects/tally_editor_uo/tally_id=3'
    expect_err = 'OpenMCTallyEditor "tally_editor_uo": Tally 3 does not exist in the OpenMC model'
    requirement = 'The system shall error if trying to change nuclides for a non-existing tally ID.'
    required_objects = 'OpenMCCellAverageProblem'
  []
  [nonexistent_nuclide]
    type = RunException
    input = tally_param_checks.i
    cli_args = 'UserObjects/tally_editor_uo/nuclides="fake fake2"'
    expect_err = "In attempting to set tally nuclides in the 'tally_editor_uo' UserObject, OpenMC reported:\n\n"
                 "Nuclide 'fake' is not present in library."
    requirement = "The system shall error if trying to add a nuclide not accessible in the cross section library."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [nuclides]
    type = CSVDiff
    input = tally_param_checks.i
    csvdiff = openmc_out.csv
    cli_args = 'UserObjects/tally_editor_uo/nuclides="U238" Outputs/file_base="openmc_out"'
    requirement = "The system shall confine the tally to a particular nuclide. This is compared by selecting just one of the existing nuclides, and comparing to the sum of the total nuclides."
    required_objects = 'OpenMCCellAverageProblem'
  []
  [scatter_tally]
    type = CheckFiles
    input = scatter.i
    check_files = tallies.out
    requirement = 'Ensure that scores specified by a tally editor UO are present in the tally output'
    file_expect_out = 'Scattering Rate'
  []
  [absorption_u238]
    type = CheckFiles
    input = nuclide_absorption.i
    check_files = tallies.out
    requirement = 'Ensure that scores specified by a tally editor UO are present in the tally output'
    file_expect_out = 'U238\n   Absorption Rate'
  []
  [add_cell_filter]
    type = CheckFiles
    input = add_filter.i
    check_files = tallies.out
    requirement = 'Ensure that filters specified by a tally editor UO are present in the tally output'
    file_expect_out = 'Cell'
  []
  [add_material_filter]
    type = CheckFiles
    input = add_filter.i
    check_files = tallies.out
    cli_args = 'UserObjects/new_filter/filter_type="material"'
    requirement = 'Ensure that filters specified by a tally editor UO are present in the tally output'
    file_expect_out = 'Material'
  []
  [add_universe_filter]
    type = CheckFiles
    input = add_filter.i
    check_files = tallies.out
    cli_args = 'UserObjects/new_filter/filter_type="universe"'
    requirement = 'Ensure that filters specified by a tally editor UO are present in the tally output'
    file_expect_out = 'Material'
  []
[]
