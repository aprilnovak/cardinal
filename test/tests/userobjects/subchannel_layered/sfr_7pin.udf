#include "udf.hpp"

void UDF_LoadKernels(occa::properties & kernelInfo)
{
}

void UDF_Setup(nrs_t *nrs)
{
  // set initial conditions for the velocity, temperature, and pressure. Because
  // we turn off the solves, we're just doing postprocessing of whatever we set
  // for the initial conditions
  mesh_t * mesh = nrs->cds->mesh[0];

  // loop over all the GLL points and assign directly to the solution arrays by
  // indexing according to the field offset necessary to hold the data for each
  // solution component
  int n_gll_points = mesh->Np * mesh->Nelements;
  for (int n = 0; n < n_gll_points; ++n)
  {
    dfloat x = mesh->x[n];
    dfloat y = mesh->y[n];
    dfloat z = mesh->z[n];

    nrs->U[n + 0 * nrs->fieldOffset] = x;
    nrs->U[n + 1 * nrs->fieldOffset] = y;
    nrs->U[n + 2 * nrs->fieldOffset] = exp(z);

    nrs->P[n] = x+y+z;

    nrs->cds->S[n + 0 * nrs->cds->fieldOffset[0]] = x+y+z;
  }
}
