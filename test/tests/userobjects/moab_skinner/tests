[Tests]
  [output_full]
    type = CheckFiles
    input = var_bins.i
    check_files = 'moab_full_0.h5m moab_full_1.h5m'
    cli_args = 'UserObjects/moab/output_full=true'
    requirement = "The system shall output the MOAB mesh copied from libMesh"
    required_objects = 'DagMCPostprocessor'
  []
  [convert_to_gmsh0]
    type = RunCommand
    prereq = output_full
    command = '../../../../install/bin/mbconvert moab_full_0.h5m full0.msh'
    requirement = "The system shall be able to convert a .h5m file to VTK"
    required_objects = 'DagMCPostprocessor'
  []
  [check_volume0]
    type = Exodiff
    prereq = convert_to_gmsh0
    input = read_volume0.i
    exodiff = read_volume0_in.e
    cli_args = '--mesh-only'
    requirement = "The system shall properly convert from libMesh to MOAB meshes in-memory. We check this in "
                  "a somewhat circuitous manner by writing the volume mesh, then converting it to gmsh, and "
                  "finally re-reading it into MOOSE so that we can use the Exodiff utility."
  []

  [output_skins]
    type = CheckFiles
    input = var_bins.i
    check_files = 'moab_skins_0.h5m moab_skins_1.h5m'
    cli_args = 'UserObjects/moab/output_skins=true'
    requirement = "The system shall output the MOAB mesh skins generated from libMesh"
    required_objects = 'DagMCPostprocessor'
  []
  [var_bins]
    type = Exodiff
    input = var_bins.i
    exodiff = var_bins_out.e
    requirement = "The system shall bin elements according to a variable value, on a single material block, and be able to visualize the bins."
    required_objects = 'DagMCPostprocessor'
  []
  [var_mat_bins]
    type = Exodiff
    input = var_mat_bins.i
    exodiff = var_mat_bins_out.e
    requirement = "The system shall bin elements according to a variable value, on multiple material blocks, and be able to visualize the bins."
    required_objects = 'DagMCPostprocessor'
  []
  [all_bins]
    type = Exodiff
    input = all_bins.i
    exodiff = all_bins_out.e
    requirement = "The system shall bin elements according to a variable value and a density value, on multiple material blocks, and be able to visualize the bins."
    required_objects = 'DagMCPostprocessor'
  []
  [invalid_max]
    type = RunException
    input = var_bins.i
    cli_args = 'UserObjects/moab/temperature_max=350.0'
    expect_err = "'temperature_max' must be greater than 'temperature_min'"
    requirement = "The system shall error if the maximum temperature is lower than the minimum temperature for the bins"
    required_objects = 'DagMCPostprocessor'
  []
  [invalid_max_density]
    type = RunException
    input = all_bins.i
    cli_args = 'UserObjects/moab/density_max=-0.6'
    expect_err = "'density_max' must be greater than 'density_min'"
    requirement = "The system shall error if the maximum relative density is lower than the minimum relative density for the bins"
    required_objects = 'DagMCPostprocessor'
  []
  [too_low]
    type = RunException
    input = var_bins.i
    cli_args = 'UserObjects/moab/temperature_min=550.0'
    expect_err = "Variable 'temp' has value below minimum range of bins. Please decrease 'temperature_min'."
    requirement = "The system shall error if the temperature is below the minimum bin bound"
    required_objects = 'DagMCPostprocessor'
  []
  [too_high]
    type = RunException
    input = var_bins.i
    cli_args = 'UserObjects/moab/temperature_max=550.0'
    expect_err = "Variable 'temp' has value above maximum range of bins. Please increase 'temperature_max'."
    requirement = "The system shall error if the temperature is above the maximum bin bound"
    required_objects = 'DagMCPostprocessor'
  []
  [too_low_den]
    type = RunException
    input = all_bins.i
    cli_args = 'UserObjects/moab/density_min=500.0'
    expect_err = "Variable 'rho' has value below minimum range of bins. Please decrease 'density_min'."
    requirement = "The system shall error if the density is below the minimum bin bound"
    required_objects = 'DagMCPostprocessor'
  []
  [too_high_den]
    type = RunException
    input = all_bins.i
    cli_args = 'UserObjects/moab/density_max=400.0'
    expect_err = "Variable 'rho' has value above maximum range of bins. Please increase 'density_max'."
    requirement = "The system shall error if the density is above the maximum bin bound"
    required_objects = 'DagMCPostprocessor'
  []
  [invalid_mesh]
    type = RunException
    input = var_bins.i
    cli_args = 'Mesh/sphere/file=../../neutronics/meshes/sphere.e'
    expect_err = "The MoabUserObject can only be used with a tetrahedral \[Mesh\]!"
    requirement = "The system shall error if the skinned mesh does not contain tetrahedral elements"
    required_objects = 'DagMCPostprocessor'
  []
  [invalid_graveyard_scales]
    type = RunException
    input = graveyard.i
    cli_args = 'UserObjects/moab/graveyard_scale_outer=1.01'
    expect_err = "'graveyard_scale_outer' must be greater than 'graveyard_scale_inner'!"
    requirement = "The system shall error if the outer graveyard surface is not larger than the inner graveyard surface"
    required_objects = 'DagMCPostprocessor'
  []
  [no_aux_temp]
    type = RunException
    input = missing.i
    expect_err = "Cannot find auxiliary variable 'temp'!"
    requirement = "The system shall error if the specified temperature auxiliary variable cannot be found"
    required_objects = 'DagMCPostprocessor'
  []
  [no_aux_density]
    type = RunException
    input = all_bins.i
    cli_args = 'UserObjects/moab/density="den"'
    expect_err = "Cannot find auxiliary variable 'den'!"
    requirement = "The system shall error if the specified density auxiliary variable cannot be found"
    required_objects = 'DagMCPostprocessor'
  []
  [overlap_t_rho]
    type = RunException
    input = all_bins.i
    cli_args = 'UserObjects/moab/density="temp"'
    expect_err = "The 'temperature' and 'density' variables cannot be the same!"
    requirement = "The system shall error if the specified density and temperature auxiliary variables are the same"
    required_objects = 'DagMCPostprocessor'
  []
[]
